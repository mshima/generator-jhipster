/*
 * This is a microservice stack sample to test compilation
 * - buildTool: gradle
 * - serviceDiscovery: consul
 * - authenticationType: jwt
 * - databaseType: sql
 * - prodDatabaseType: postgresql, mysql, mariadb
 * - enableHibernateCache: false
 * - cacheProvider: infinispan, memcached, redis
 */

application {
  config {
    applicationType gateway
    authenticationType jwt
    baseName gateway
    buildTool gradle
    clientFramework react
    packageName com.okta.developer.gateway
    prodDatabaseType postgresql
    serviceDiscoveryType consul
    testFrameworks [cypress, cucumber, gatling]
    creationTimestamp 1617901618886
    jwtSecretKey "ZjY4MTM4YjI5YzMwZjhjYjI2OTNkNTRjMWQ5Y2Q0Y2YwOWNmZTE2NzRmYzU3NTMwM2NjOTE3MTllOTM3MWRkMzcyYTljMjVmNmQ0Y2MxOTUzODc0MDhhMTlkMDIxMzI2YzQzZDM2ZDE3MmQ3NjVkODk3OTVmYzljYTQyZDNmMTQ="
  }
  entities UserData, Blog, Post, Tag, Product
}

application {
  config {
    baseName blog
    packageName com.okta.developer.blog
    applicationType microservice
    authenticationType jwt
    prodDatabaseType postgresql
    cacheProvider infinispan
    serviceDiscoveryType consul
    enableHibernateCache false
    serverPort 8081
    testFrameworks [cucumber, gatling]
    creationTimestamp 1617901618887
    jwtSecretKey "ZjY4MTM4YjI5YzMwZjhjYjI2OTNkNTRjMWQ5Y2Q0Y2YwOWNmZTE2NzRmYzU3NTMwM2NjOTE3MTllOTM3MWRkMzcyYTljMjVmNmQ0Y2MxOTUzODc0MDhhMTlkMDIxMzI2YzQzZDM2ZDE3MmQ3NjVkODk3OTVmYzljYTQyZDNmMTQ="
  }
  entities Blog, Post, Tag
}

application {
  config {
    baseName store,
    packageName com.okta.developer.store
    applicationType microservice
    authenticationType jwt
    prodDatabaseType mysql
    cacheProvider memcached
    serviceDiscoveryType consul
    enableHibernateCache false
    serverPort 8082
    testFrameworks [cucumber, gatling]
    creationTimestamp 1617901618888
    jwtSecretKey "ZjY4MTM4YjI5YzMwZjhjYjI2OTNkNTRjMWQ5Y2Q0Y2YwOWNmZTE2NzRmYzU3NTMwM2NjOTE3MTllOTM3MWRkMzcyYTljMjVmNmQ0Y2MxOTUzODc0MDhhMTlkMDIxMzI2YzQzZDM2ZDE3MmQ3NjVkODk3OTVmYzljYTQyZDNmMTQ="
  }
  entities Product
}

application {
  config {
    baseName notification,
    packageName com.okta.developer.notification
    applicationType microservice
    authenticationType jwt
    prodDatabaseType mariadb
    cacheProvider redis
    serviceDiscoveryType consul
    enableHibernateCache false
    serverPort 8083
    entitySuffix Entity
    dtoSuffix Rest
    testFrameworks [cucumber, gatling]
    creationTimestamp 1617901618889
    jwtSecretKey "ZjY4MTM4YjI5YzMwZjhjYjI2OTNkNTRjMWQ5Y2Q0Y2YwOWNmZTE2NzRmYzU3NTMwM2NjOTE3MTllOTM3MWRkMzcyYTljMjVmNmQ0Y2MxOTUzODc0MDhhMTlkMDIxMzI2YzQzZDM2ZDE3MmQ3NjVkODk3OTVmYzljYTQyZDNmMTQ="
  }
  entities Notification
}

@ChangelogDate(20210408164809)
entity UserData {
  address String
}

@ChangelogDate(20210408164810)
entity Blog {
  name String required minlength(3)
  handle String required minlength(2)
}

@ChangelogDate(20210408164811)
entity Post {
  title String required
}

@ChangelogDate(20210408164812)
entity Tag {
  name String required minlength(2)
}

@ChangelogDate(20210408164813)
entity Product {
  title String required
  price BigDecimal required min(0)
  image ImageBlob
}

@ChangelogDate(20210408164814)
entity Notification {
  title String required
}

relationship OneToOne {
  @Id UserData{user(login)} to User
}

relationship ManyToOne {
  Post{blog(name)} to Blog
}

relationship ManyToMany {
  Post{tag(name)} to Tag{post}
}

paginate Post, Tag with infinite-scroll
paginate Product with pagination

microservice Product with store
microservice Blog, Post, Tag with blog
microservice Notification with notification
service all with serviceImpl

deployment {
  deploymentType docker-compose,
  appsFolders [gateway, store, blog, notification]
  dockerRepositoryName "hipsterslabs"
  monitoring no
  serviceDiscoveryType consul
}
