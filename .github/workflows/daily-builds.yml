#
# Copyright the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Daily Builds
on:
  workflow_dispatch:
    inputs:
      sample-group:
        type: choice
        description: Sample group to test
        options:
          - daily-builds/angular-webpack
env:
  NODE_OPTIONS: --dns-result-order=ipv4first
  FORCE_COLOR: 2
jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build.outputs.matrix }}
      empty-matrix: ${{ steps.build.outputs.empty-matrix }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v5
        with:
          node-version: 24
      - run: npm ci --ignore-scripts
      - id: build
        run: bin/jhipster.cjs github-build-matrix ${{ inputs.sample-group }}
  applications:
    name: ${{ matrix.job-name }}
    needs: build-matrix
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v5
        with:
          path: generator-jhipster
          fetch-depth: 2
      - uses: jhipster/actions/setup-runner@v1
        with:
          node-version: ${{ matrix.node-version }}
          java-version: ${{ matrix.java-version }}
          npm-version: ${{ matrix.npm-version }}
          maven-cache: true
          gradle-cache: ${{ matrix.gradle-cache }}
          binary-dir: ${{ github.workspace }}/generator-jhipster/bin
      - run: npm ci --ignore-scripts
        working-directory: ${{ github.workspace }}/generator-jhipster
      - uses: jhipster/actions/build-jhipster-bom@v1
        with:
          jhipster-bom-ref: main
      - name: Generate project
        run: jhipster.cjs ${{ matrix.args }} --defaults
        env:
          JHIPSTER_DEPENDENCIES_VERSION: 0.0.0-CICD
          JHI_SKIP_JHIPSTER_DEPENDENCIES: true
          JHI_PROFILE: ${{ matrix.default-environment }}
          JHI_JDL: ${{ matrix.jdl }}
      - run: jhipster.cjs info
      - run: ${{ matrix.cmd-frontend }}
        id: frontend
      - run: ${{ matrix.cmd-backend }}
        id: backend
      - run: ${{ matrix.cmd-e2e-1 }}
        id: e2e-1
      - run: ${{ matrix.cmd-e2e-2 }}
        id: e2e-2
      - name: Upload cypress screenshots
        uses: actions/upload-artifact@v4
        if: always() && (steps.e2e-1.outcome == 'failure' || steps.e2e-2.outcome == 'failure')
        with:
          name: screenshots-${{ matrix.name }}
          path: ${{ github.workspace }}app//*/cypress/screenshots
  check-workflow:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [applications]
    if: always()
    steps:
      - run: |
          echo '${{ toJSON(needs) }}'
          if [ 'skipped' == '${{ needs.applications.result }}' ] || [ 'success' == '${{ needs.applications.result }}' ] || [ 'closed' == '${{ github.event.action }}' ]; then
            exit 0
          fi
          exit 1
