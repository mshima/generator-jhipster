#
# Copyright 2013-2021 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Angular
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches-ignore:
      - 'dependabot/**'
      - 'skip_ci*'
    paths-ignore:
      - 'generators/*client/templates/react/**'
      - 'generators/*client/templates/vue/**'
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - 'package*.json'
      - 'generators/*client/templates/react/**'
      - 'generators/*client/templates/vue/**'
env:
  JHI_JDK: 11
  FORCE_COLOR: 1
jobs:
  applications:
    name: ${{ matrix.app-type }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    if: >-
      !contains(github.event.head_commit.message, '[react]') &&
      !contains(github.event.head_commit.message, '[vue]') &&
      !contains(github.event.pull_request.title, '[react]') &&
      !contains(github.event.pull_request.title, '[vue]') &&
      !contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[ci skip]') &&
      (github.event.pull_request.draft == false || !contains(github.event.pull_request.labels.*.name, 'pr: skip-ci'))
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        node_version: [14.16.0]
        os: [ubuntu-20.04]
        cache: [angular]
        app-type:
          - ngx-default
          - ngx-default-additional
          - ngx-mysql-es-noi18n-mapsid
          - ngx-mariadb-oauth2-infinispan
          - ngx-mongodb-kafka-cucumber
          - ngx-h2mem-ws-nol2
          - ngx-gradle-fr
          - ngx-gradle-mysql-es-noi18n-mapsid
          - ngx-gradle-mariadb-oauth2-infinispan
          - ngx-gradle-mongodb-kafka-cucumber
          - ngx-gradle-h2disk-ws-nocache
        include:
          - app-type: ngx-default
            entity: sqlfull
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 1
            sonar-analyse: 1
          - app-type: ngx-default-additional
            jhi-app-type: ngx-default
            entity: none
            jdl-entity: '*'
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 1
          - app-type: ngx-mysql-es-noi18n-mapsid
            entity: sql
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 0
          - app-type: ngx-mariadb-oauth2-infinispan
            entity: sqlfull
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 0
          - app-type: ngx-mongodb-kafka-cucumber
            entity: mongodb
            environment: dev
            war: 0
            e2e: 1
            testcontainers: 0
          - app-type: ngx-h2mem-ws-nol2
            entity: sql
            environment: dev
            war: 0 # TODO: need change to 1, when maven+war is fixed
            e2e: 1
            testcontainers: 0
          - app-type: ngx-gradle-fr
            entity: sql
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 0
          - app-type: ngx-gradle-mysql-es-noi18n-mapsid
            entity: sqlfull
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 1
          - app-type: ngx-gradle-mariadb-oauth2-infinispan
            entity: sql
            environment: dev
            war: 0
            e2e: 1
            testcontainers: 1
          - app-type: ngx-gradle-mongodb-kafka-cucumber
            entity: mongodb
            environment: prod
            war: 0
            e2e: 1
            testcontainers: 0
          - app-type: ngx-gradle-h2disk-ws-nocache
            entity: sql
            environment: dev
            war: 1
            e2e: 1
            testcontainers: 0
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v2
        with:
          path: generator-jhipster
          fetch-depth: 2
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node_version }}
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11.x'
      - name: 'SETUP: environment'
        uses: ./generator-jhipster/.github/actions/setup
        with:
          entities-sample: ${{ matrix.entity }}
          jdl-entities-sample: ${{ matrix.jdl-entity }}
          application-sample: ${{ matrix.jhi-app-type || matrix.app-type }}
          application-environment: ${{ matrix.environment }}
          application-packaging: ${{ matrix.war || 'jar' }}
          enable-testcontainers: ${{ matrix.testcontainers != 0 }}
      - name: 'SETUP: Get date'
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      - name: 'SETUP: load npm cache'
        uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.cache }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('generator-jhipster/package-lock.json', 'generator-jhipster/**/package.json.ejs') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.cache }}-${{ steps.get-date.outputs.date }}-
      - name: 'SETUP: load maven cache'
        if: "!contains(matrix.app-type, 'gradle')"
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}-${{ hashFiles('generator-jhipster/**/pom.xml.ejs') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}-
      - name: 'SETUP: load jhipster-bom maven cache'
        if: contains(matrix.app-type, 'gradle')
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-jhipster-bom-${{ steps.get-date.outputs.date }}-
          restore-keys: |
            ${{ runner.os }}-maven-jhipster-bom-
      - name: 'SETUP: load gradle cache'
        if: contains(matrix.app-type, 'gradle')
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('generator-jhipster/**/build.gradle.ejs') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: 'SETUP: load e2e cache'
        if: matrix.e2e == 1
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cache/Cypress/
          key: ${{ runner.os }}-cypress-${{ hashFiles('generator-jhipster/client/common/package.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-
      - name: 'TOOLS: configure tools installed by the system'
        run: $JHI_SCRIPTS/03-system.sh
      - name: 'TOOLS: configure git'
        run: $JHI_SCRIPTS/04-git-config.sh
      #----------------------------------------------------------------------
      # Install JHipster
      #----------------------------------------------------------------------
      - name: 'GENERATION: install JHipster'
        uses: ./generator-jhipster/.github/actions/install
      #----------------------------------------------------------------------
      # Install Generate project+entities
      #----------------------------------------------------------------------
      - name: 'GENERATION: generate config and project'
        uses: ./generator-jhipster/.github/actions/generate
      #----------------------------------------------------------------------
      # Detect changes against base commit
      #----------------------------------------------------------------------
      - name: 'MERGE: Install base generator-jhipster'
        continue-on-error: true
        id: base-checkout
        if: github.event.pull_request
        working-directory: ${{ github.workspace }}/generator-jhipster
        run: |
          git checkout @~1
          git log
          npm install
      - name: 'MERGE: generate merge base project'
        uses: ./generator-jhipster/.github/actions/generate
        continue-on-error: true
        id: base-app
        if: steps.base-checkout.outcome == 'success'
        with:
          generation-args: --skip-install --skip-git
        env:
          JHI_FOLDER_APP: ${{ github.workspace }}/base-app
      - name: 'MERGE: merge project diff'
        continue-on-error: true
        id: merge-is-equal
        if: steps.base-app.outputs.generation-outcome == 'success'
        working-directory: ${{ github.workspace }}/base-app
        run: |
          # Copy git repository (clone without the files)
          cp -a ${{ github.workspace }}/app/.git .
          git log
          # File keystore.p12 always changes
          # File package-lock.json is not generated
          # Verify if the generated source has changed
          git add .
          git -c color.ui=always diff -R --cached -- '.yo-rc.json' '.jhipster/**'
          git -c color.ui=always diff -R --cached --exit-code -- . ':!.yo-rc.json' ':!.jhipster/**' ':!package-lock.json' ':!src/main/resources/config/tls/keystore.p12' || echo "::set-output name=has-changes::true"
      - name: 'MERGE: tests should be skipped'
        id: tests-should-be-skipped
        if: >
          steps.merge-is-equal.outcome == 'success' &&
          steps.merge-is-equal.outputs.has-changes != 'true'
        run: echo 'Skipping tests' && echo "::set-output name=skip-tests::true"
      #----------------------------------------------------------------------
      # Launch tests
      #----------------------------------------------------------------------
      - name: 'TESTS: launch tests'
        uses: ./generator-jhipster/.github/actions/run-tests
        id: tests
        if: steps.tests-should-be-skipped.outputs.skip-tests != 'true'
        with:
          e2e: ${{ matrix.e2e != 0 }}
      - name: 'BACKEND: Store failure logs'
        uses: actions/upload-artifact@v2
        if: always() && (steps.tests.output.backend-outcome == 'failure')
        with:
          name: log-${{ matrix.app-type }}
          path: ${{ env.JHI_FOLDER_APP }}/build/test-results/**/*.xml
      - name: 'E2E: Store failure screenshots'
        uses: actions/upload-artifact@v2
        if: always() && (steps.tests.output.e2e_outcome == 'failure')
        with:
          name: screenshots-${{ matrix.app-type }}
          path: ${{ env.JHI_FOLDER_APP }}/*/cypress/screenshots
      - name: 'ANALYSIS: Sonar analysis'
        if: steps.tests-should-be-skipped.outputs.skip-tests != 'true' && matrix.sonar-analyse == 1
        run: $JHI_SCRIPTS/25-sonar-analyze.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
