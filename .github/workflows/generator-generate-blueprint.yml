#
# Copyright the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Blueprint Generator
on: [workflow_call]
jobs:
  check-generator-generate-blueprint:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    if: >-
      !contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[ci skip]') &&
      github.event.action != 'closed' &&
      !contains(github.event.pull_request.labels.*.name, 'pr: skip-ci')
    timeout-minutes: 40
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v4
        with:
          path: generator-jhipster
          fetch-depth: 2
      - name: 'SETUP: environment'
        id: setup
        uses: ./generator-jhipster/.github/actions/setup
        with:
          application-sample: ng-default
          executable: jhipster-foo
          jhipster-bom-branch: ignore
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.setup.outputs.node-version }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ steps.setup.outputs.java-version }}
      - uses: jhipster/actions/restore-cache@v0
        with:
          npm: true
          maven: true
      - uses: jhipster/actions/setup-keycloak-hostname@v0
      - uses: jhipster/actions/setup-git@v0
      #----------------------------------------------------------------------
      # Install JHipster and generate project+entities
      #----------------------------------------------------------------------
      - run: npm install && npm link
        working-directory: ${{ github.workspace }}/generator-jhipster
      - uses: ./generator-jhipster/.github/actions/setup-bom
        env:
          JHI_INSTALL_GLOBALLY: 'true'
      - name: 'GENERATION: generate blueprint'
        run: |
          cd ..
          mkdir generator-jhipster-foo
          cd generator-jhipster-foo
          cp $JHI_INTEG/generate-blueprint-samples/default/.yo-rc.json .
          jhipster generate-blueprint --force --link-jhipster-dependency --generate-snapshots --skip-install
          npm link generator-jhipster
          npm link
      - name: 'GENERATION: config'
        run: $JHI_SCRIPTS/11-generate-config.sh
      - name: 'GENERATION: project'
        run: $JHI_SCRIPTS/12-generate-project.sh --blueprints foo
      - name: 'GENERATION: jhipster info'
        run: $JHI_SCRIPTS/14-jhipster-info.sh
      #----------------------------------------------------------------------
      # Launch tests
      #----------------------------------------------------------------------
      - name: 'TESTS: blueprint files should be written'
        run: |
          ls template-file-client
          ls template-file-common
          ls template-file-cypress
          ls template-file-server
      - name: 'TESTS: backend'
        id: backend
        run: npm run ci:backend:test
      - uses: ./generator-jhipster/.github/actions/handle-logs
        with:
          name: application
          application-path: ${{ steps.setup.outputs.application-path }}
          upload-java-test-results: ${{ steps.backend.outcome == 'failure' }}
