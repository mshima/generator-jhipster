/**
 * Copyright 2013-2022 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import expect from 'expect';

import JHipsterBaseEntitiesIncrementalGenerator from './generator-base-entities-incremental.cjs';
import { dryRunHelpers as helpers, filterEntityField, filterEntityRelationship } from '../test/utils/utils.mjs';
import fieldTypes from '../jdl/jhipster/field-types.js';
import { PRIORITY_PREFIX, WRITING_ENTITIES_PRIORITY } from '../lib/constants/priorities.mjs';

class TestGenerator extends JHipsterBaseEntitiesIncrementalGenerator {
  constructor(args, options, features) {
    super(args, options, { taskPrefix: PRIORITY_PREFIX, ...features });
  }

  async _postConstruct() {
    await this.dependsOnJHipster('bootstrap-application');
  }

  get [WRITING_ENTITIES_PRIORITY]() {
    return {
      expose({ entitiesDiff }) {
        this.env.sharedOptions.sharedData.entitiesDiff = entitiesDiff;
      },
    };
  }
}

const filterEntityChanges = entitiesDiff => {
  const { entity, previousEntity, entityChanges } = entitiesDiff;
  const { addedFields, removedFields, addedRelationships, removedRelationships } = entityChanges;
  return {
    ...entityChanges,
    addedFields: addedFields.map(field => filterEntityField(entity, field)),
    removedFields: removedFields.map(field => filterEntityField(previousEntity, field)),
    addedRelationships: addedRelationships.map(relationship => filterEntityRelationship(entity, relationship)),
    removedRelationships: removedRelationships.map(relationship => filterEntityRelationship(previousEntity, relationship)),
  };
};

const {
  CommonDBTypes: { STRING },
} = fieldTypes;

describe('JHipster base entities incremental', () => {
  describe('with', () => {
    describe('added entity', () => {
      let runResult;
      before(async () => {
        runResult = await helpers.run(TestGenerator, { namespace: 'jhipster:incremental' }).withOptions({
          defaults: true,
          creationTimestamp: '2000-01-01',
          applicationWithEntities: {
            config: {
              baseName: 'jhipster',
              incrementalChangelog: true,
            },
            entities: [
              {
                name: 'EntityA',
                changelogDate: '20220129025419',
                fields: [
                  {
                    fieldName: 'name',
                    fieldType: STRING,
                  },
                ],
              },
            ],
          },
        });
      });

      it('should write files', () => {
        expect(runResult.getSnapshot('**/{.jhipster/**, entities.json}')).toMatchInlineSnapshot(`
Object {
  ".jhipster/EntityA.json": Object {
    "contents": "{
  \\"changelogDate\\": \\"20220129025419\\",
  \\"fields\\": [
    {
      \\"fieldName\\": \\"name\\",
      \\"fieldType\\": \\"String\\"
    }
  ],
  \\"name\\": \\"EntityA\\",
  \\"relationships\\": []
}
",
    "stateCleared": "modified",
  },
  ".jhipster/User.json": Object {
    "contents": null,
  },
}
`);
      });
      it('should prepare entities', () => {
        expect(Object.keys(runResult.env.sharedOptions.sharedData.applications.jhipster.sharedEntities)).toMatchInlineSnapshot(`
Array [
  "User",
  "EntityA",
]
`);
      });
      it('should prepare entitiesDiff', () => {
        const { entitiesDiff } = runResult.env.sharedOptions.sharedData;
        expect(entitiesDiff.map(entityDiff => filterEntityChanges(entityDiff))).toMatchInlineSnapshot(`
Array [
  Object {
    "addedFields": Array [
      Object {
        "autoGenerate": true,
        "autoGenerateByRepository": true,
        "autoGenerateByService": false,
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "builtIn": true,
        "columnName": "id",
        "createRandexp": "[createRandexp] function",
        "dynamic": false,
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "Id",
        "fieldIsEnum": false,
        "fieldName": "id",
        "fieldNameAsDatabaseColumn": "id",
        "fieldNameCapitalized": "Id",
        "fieldNameHumanized": "ID",
        "fieldNameUnderscored": "id",
        "fieldTranslationKey": "global.field.id",
        "fieldType": "Long",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": false,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": true,
        "fieldTypeNumeric": true,
        "fieldTypeString": false,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesMaxlength": undefined,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "id": true,
        "jpaGeneratedValue": "sequence",
        "nullable": true,
        "path": Array [
          "id",
        ],
        "readonly": true,
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "number",
        "unique": false,
        "uniqueValue": Array [],
      },
      Object {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "builtIn": true,
        "columnName": "login",
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "Login",
        "fieldIsEnum": false,
        "fieldName": "login",
        "fieldNameAsDatabaseColumn": "login",
        "fieldNameCapitalized": "Login",
        "fieldNameHumanized": "Login",
        "fieldNameUnderscored": "login",
        "fieldTranslationKey": "undefined.user.login",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "nullable": true,
        "path": Array [
          "login",
        ],
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "string",
        "unique": false,
        "uniqueValue": Array [],
      },
      Object {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "builtIn": true,
        "columnName": "first_name",
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "FirstName",
        "fieldIsEnum": false,
        "fieldName": "firstName",
        "fieldNameAsDatabaseColumn": "first_name",
        "fieldNameCapitalized": "FirstName",
        "fieldNameHumanized": "First Name",
        "fieldNameUnderscored": "first_name",
        "fieldTranslationKey": "undefined.user.firstName",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "nullable": true,
        "path": Array [
          "firstName",
        ],
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "string",
        "unique": false,
        "uniqueValue": Array [],
      },
      Object {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "builtIn": true,
        "columnName": "last_name",
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "LastName",
        "fieldIsEnum": false,
        "fieldName": "lastName",
        "fieldNameAsDatabaseColumn": "last_name",
        "fieldNameCapitalized": "LastName",
        "fieldNameHumanized": "Last Name",
        "fieldNameUnderscored": "last_name",
        "fieldTranslationKey": "undefined.user.lastName",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "nullable": true,
        "path": Array [
          "lastName",
        ],
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "string",
        "unique": false,
        "uniqueValue": Array [],
      },
    ],
    "addedRelationships": Array [],
    "changelogDate": undefined,
    "entityName": "User",
    "incremental": undefined,
    "removedFields": Array [],
    "removedRelationships": Array [],
  },
  Object {
    "addedFields": Array [
      Object {
        "autoGenerate": true,
        "createRandexp": "[createRandexp] function",
        "dynamic": false,
        "entity": "[entity] undefined",
        "fieldName": "id",
        "fieldNameHumanized": "ID",
        "fieldTranslationKey": "global.field.id",
        "fieldType": "Long",
        "generateFakeData": "[generateFakeData] function",
        "id": true,
        "reference": "[reference]",
      },
      Object {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "columnName": "name",
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "Name",
        "fieldIsEnum": false,
        "fieldName": "name",
        "fieldNameAsDatabaseColumn": "name",
        "fieldNameCapitalized": "Name",
        "fieldNameHumanized": "Name",
        "fieldNameUnderscored": "name",
        "fieldTranslationKey": "undefined.entityA.name",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "nullable": true,
        "path": Array [
          "name",
        ],
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "string",
        "unique": false,
        "uniqueValue": Array [],
      },
    ],
    "addedRelationships": Array [],
    "changelogDate": "20220129025419",
    "entityName": "EntityA",
    "incremental": undefined,
    "removedFields": Array [],
    "removedRelationships": Array [],
  },
]
`);
      });
    });

    describe('changed entity', () => {
      let runResult;
      before(async () => {
        runResult = await helpers.run(TestGenerator, { namespace: 'jhipster:incremental' }).withOptions({
          defaults: true,
          creationTimestamp: '2000-01-01',
          applicationWithEntities: {
            config: {
              baseName: 'jhipster',
              incrementalChangelog: true,
            },
            entities: [
              {
                name: 'EntityA',
                changelogDate: '20220129025419',
                fields: [
                  {
                    fieldName: 'commonName',
                    fieldType: STRING,
                  },
                  {
                    fieldName: 'newName',
                    fieldType: STRING,
                  },
                ],
              },
            ],
            previousEntities: [
              {
                name: 'EntityA',
                changelogDate: '20220129025419',
                fields: [
                  {
                    fieldName: 'commonName',
                    fieldType: STRING,
                  },
                  {
                    fieldName: 'previousName',
                    fieldType: STRING,
                  },
                ],
              },
            ],
          },
        });
      });

      it('should write files', () => {
        expect(runResult.getSnapshot('**/{.jhipster/**, entities.json}')).toMatchInlineSnapshot(`
Object {
  ".jhipster/EntityA.json": Object {
    "contents": "{
  \\"changelogDate\\": \\"20220129025419\\",
  \\"fields\\": [
    {
      \\"fieldName\\": \\"commonName\\",
      \\"fieldType\\": \\"String\\"
    },
    {
      \\"fieldName\\": \\"newName\\",
      \\"fieldType\\": \\"String\\"
    }
  ],
  \\"name\\": \\"EntityA\\",
  \\"relationships\\": []
}
",
    "stateCleared": "modified",
  },
  ".jhipster/User.json": Object {
    "contents": null,
  },
}
`);
      });
      it('should prepare entities', () => {
        expect(Object.keys(runResult.env.sharedOptions.sharedData.applications.jhipster.sharedEntities)).toMatchInlineSnapshot(`
Array [
  "User",
  "EntityA",
]
`);
      });
      it('should prepare entitiesDiff', () => {
        const { entitiesDiff } = runResult.env.sharedOptions.sharedData;
        expect(entitiesDiff.map(entityDiff => filterEntityChanges(entityDiff))).toMatchInlineSnapshot(`
Array [
  Object {
    "addedFields": Array [
      Object {
        "autoGenerate": true,
        "autoGenerateByRepository": true,
        "autoGenerateByService": false,
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "builtIn": true,
        "columnName": "id",
        "createRandexp": "[createRandexp] function",
        "dynamic": false,
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "Id",
        "fieldIsEnum": false,
        "fieldName": "id",
        "fieldNameAsDatabaseColumn": "id",
        "fieldNameCapitalized": "Id",
        "fieldNameHumanized": "ID",
        "fieldNameUnderscored": "id",
        "fieldTranslationKey": "global.field.id",
        "fieldType": "Long",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": false,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": true,
        "fieldTypeNumeric": true,
        "fieldTypeString": false,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesMaxlength": undefined,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "id": true,
        "jpaGeneratedValue": "sequence",
        "nullable": true,
        "path": Array [
          "id",
        ],
        "readonly": true,
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "number",
        "unique": false,
        "uniqueValue": Array [],
      },
      Object {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "builtIn": true,
        "columnName": "login",
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "Login",
        "fieldIsEnum": false,
        "fieldName": "login",
        "fieldNameAsDatabaseColumn": "login",
        "fieldNameCapitalized": "Login",
        "fieldNameHumanized": "Login",
        "fieldNameUnderscored": "login",
        "fieldTranslationKey": "undefined.user.login",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "nullable": true,
        "path": Array [
          "login",
        ],
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "string",
        "unique": false,
        "uniqueValue": Array [],
      },
      Object {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "builtIn": true,
        "columnName": "first_name",
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "FirstName",
        "fieldIsEnum": false,
        "fieldName": "firstName",
        "fieldNameAsDatabaseColumn": "first_name",
        "fieldNameCapitalized": "FirstName",
        "fieldNameHumanized": "First Name",
        "fieldNameUnderscored": "first_name",
        "fieldTranslationKey": "undefined.user.firstName",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "nullable": true,
        "path": Array [
          "firstName",
        ],
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "string",
        "unique": false,
        "uniqueValue": Array [],
      },
      Object {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "builtIn": true,
        "columnName": "last_name",
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "LastName",
        "fieldIsEnum": false,
        "fieldName": "lastName",
        "fieldNameAsDatabaseColumn": "last_name",
        "fieldNameCapitalized": "LastName",
        "fieldNameHumanized": "Last Name",
        "fieldNameUnderscored": "last_name",
        "fieldTranslationKey": "undefined.user.lastName",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "nullable": true,
        "path": Array [
          "lastName",
        ],
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "string",
        "unique": false,
        "uniqueValue": Array [],
      },
    ],
    "addedRelationships": Array [],
    "changelogDate": undefined,
    "entityName": "User",
    "incremental": undefined,
    "removedFields": Array [],
    "removedRelationships": Array [],
  },
  Object {
    "addedFields": Array [
      Object {
        "autoGenerate": true,
        "createRandexp": "[createRandexp] function",
        "dynamic": false,
        "entity": "[entity] undefined",
        "fieldName": "id",
        "fieldNameHumanized": "ID",
        "fieldTranslationKey": "global.field.id",
        "fieldType": "Long",
        "generateFakeData": "[generateFakeData] function",
        "id": true,
        "reference": "[reference]",
      },
      Object {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "columnName": "new_name",
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldInJavaBeanMethod": "NewName",
        "fieldIsEnum": false,
        "fieldName": "newName",
        "fieldNameAsDatabaseColumn": "new_name",
        "fieldNameCapitalized": "NewName",
        "fieldNameHumanized": "New Name",
        "fieldNameUnderscored": "new_name",
        "fieldTranslationKey": "undefined.entityA.newName",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidateRulesPatternAngular": undefined,
        "fieldValidateRulesPatternJava": undefined,
        "fieldValidateRulesPatternReact": undefined,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": "[generateFakeData] function",
        "nullable": true,
        "path": Array [
          "newName",
        ],
        "reference": "[reference]",
        "relationshipsPath": Array [],
        "tsType": "string",
        "unique": false,
        "uniqueValue": Array [],
      },
    ],
    "addedRelationships": Array [],
    "creationChangelogDate": "20220129025419",
    "entityName": "EntityA",
    "incremental": true,
    "removedFields": Array [
      Object {
        "createRandexp": "[createRandexp] function",
        "entity": "[entity] undefined",
        "fieldName": "previousName",
        "fieldType": "String",
        "generateFakeData": "[generateFakeData] function",
        "reference": "[reference]",
      },
    ],
    "removedRelationships": Array [],
  },
]
`);
      });
    });
  });
});
