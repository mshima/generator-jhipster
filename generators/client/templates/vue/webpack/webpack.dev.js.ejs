const path = require('path');
const BrowserSyncPlugin = require('browser-sync-webpack-plugin');
const WebpackNotifierPlugin = require('webpack-notifier');

module.exports = () => {
  // Build proxy object, workaround vue-cli not working with proxy with array type.
  const context = { target: 'http://127.0.0.1:<%= serverPort %>', secure: false, headers: { host: 'localhost:9000' } };
  const proxy = Object.fromEntries(
    [
      '/api',
      '/services',
      '/management',
      '/swagger-resources',
      '/v2/api-docs',
      '/v3/api-docs',
      '/h2-console',
<%_ if (authenticationTypeOauth2) { _%>
      '/oauth2',
      '/login',
<%_ } _%>
      '/auth'
    ].map(contextPath => [
      contextPath,
      context,
    ])
  );

  return {
    devServer: {
      contentBase: './<%= DIST_DIR %>',
      port: <%= devServerPort %>,
      proxy: {
        ...proxy,
<%_ if (communicationSpringWebsocket) { _%>
        '/websocket': {
          target: 'ws://127.0.0.1:<%= serverPort %>',
          ws: true
        }
<%_ } _%>
      },
      watchOptions: {
        ignored: /node_modules/,
      },
      historyApiFallback: true,
    },
    plugins: [
      new WebpackNotifierPlugin({
        title: '<%= humanizedBaseName %>',
        contentImage: path.join(__dirname, '../<%= CLIENT_MAIN_SRC_DIR %>content/images/logo-jhipster.png'),
      }),
      new BrowserSyncPlugin(
        {
          host: 'localhost',
          port: 9000,
          proxy: {
            target: 'http://localhost:<%= devServerPort %>',
<%_ if (communicationSpringWebsocket) { _%>
            ws: true,
<%_ } _%>
          },
          socket: {
            clients: {
              heartbeatTimeout: 60000,
            },
          },
          /*
        ,ghostMode: { // uncomment this part to disable BrowserSync ghostMode; https://github.com/jhipster/generator-jhipster/issues/11116
          clicks: false,
          location: false,
          forms: false,
          scroll: false
        } */
        },
        {
          reload: true,
        }
      ),
    ],
  };
};
