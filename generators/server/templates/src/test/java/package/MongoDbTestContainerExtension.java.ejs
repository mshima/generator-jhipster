package <%= packageName %>;

import java.util.Collections;

import org.junit.jupiter.api.extension.BeforeAllCallback;
import org.junit.jupiter.api.extension.ExtensionContext;
import org.testcontainers.containers.MongoDBContainer;
import org.testcontainers.utility.DockerImageName;

public class MongoDbTestContainerExtension implements BeforeAllCallback {
    <%_ /* TODO, the smallest configuration that lead to only one error for webflux-gw-jwt was 0.6 RAM /0.8 SWAP/0.1 nanocore */ _%>
    private static final ThreadLocal<MongoDBContainer> THREAD_CONTAINER = new ThreadLocal<>();

    @Override
    public void beforeAll(ExtensionContext context) {
        if (null == THREAD_CONTAINER.get()) {
            MongoDBContainer mongoDBContainer = new MongoDBContainer(DockerImageName.parse("<%= DOCKER_MONGODB %>"))
                .withTmpFs(Collections.singletonMap("/testtmpfs", "rw"))
                .withCommand("--nojournal --setParameter ttlMonitorEnabled=false --setParameter diagnosticDataCollectionEnabled=false");
            mongoDBContainer.start();
            THREAD_CONTAINER.set(mongoDBContainer);
        }
    }

    public static ThreadLocal<?> getThreadContainer() {
        return THREAD_CONTAINER;
    }
}
