import { defineComponent, inject, ref, Ref } from 'vue';
import GatewayService from './gateway.service';

export default defineComponent({
  name: '<%=jhiPrefixCapitalized%>GatewayComponent',
  setup() {
    const gatewayService = inject('gatewayService', () => new GatewayService());;

    const gatewayRoutes: Ref<any[]> = ref([]);
    const updatingRoutes = ref(false);

    return {
      gatewayRoutes,
      updatingRoutes,
      gatewayService,
    }
  },
  mounted() : void {
    this.refresh();
  },
  methods: {
    refresh() : void {
      this.updatingRoutes = true;
      this.gatewayService().findAll().then((res) => {
<%_ if (serviceDiscoveryConsul) { _%>
        this.gatewayRoutes = res.data.map(gatewayRoute => {
          gatewayRoute.serviceInstances = gatewayRoute.serviceInstances.map(serviceInstance => {
            if (serviceInstance.healthService && serviceInstance.healthService.checks) {
              if (
                serviceInstance.healthService.checks.filter((check: any) => check.status === 'PASSING').length ===
                serviceInstance.healthService.checks.length
              ) {
                serviceInstance.instanceInfo = { status: 'UP' };
              } else {
                serviceInstance.instanceInfo = { status: 'DOWN'} ;
              }
            }
            return serviceInstance;
          });
          return gatewayRoute;
        });
<%_ } else { _%>
        this.gatewayRoutes = res.data;
<%_ } _%>
        this.updatingRoutes = false;
      });
    },
  },
});
